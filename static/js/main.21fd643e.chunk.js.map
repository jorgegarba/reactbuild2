{"version":3,"sources":["modulos/invitado/paginas/Nosotros.js","modulos/invitado/paginas/Portafolio.js","modulos/invitado/paginas/Landing.js","modulos/invitado/componentes/Navbar.js","modulos/invitado/Invitado.js","modulos/logeado/paginas/Dashboard.js","modulos/logeado/paginas/Perfil.js","modulos/logeado/Logeado.js","App.js","serviceWorker.js","index.js"],"names":["Nosotros","Portafolio","Landing","state","nosotros","this","to","onClick","setState","Component","Navbar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","aria-haspopup","aria-labelledby","placeholder","Invitado","path","render","Dashboard","Perfil","Logeado","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8QAUeA,EARE,WACf,OACE,0CCMWC,EARI,WACjB,OACE,4CCFiBC,E,2MACnBC,MAAQ,CACNC,UAAU,G,wEAEF,IAAD,OAEP,OAAIC,KAAKF,MAAMC,SACL,kBAAC,IAAD,CAAUE,GAAI,cAItB,uCAGA,4BAAQC,QAAS,WACb,EAAKC,SAAS,CAAEJ,UAAU,MAD9B,sB,GAd+BK,aC8BtBC,EA/BA,WACb,OACE,yBAAKC,UAAU,+CACb,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,UACA,4BAAQD,UAAU,2BAA2BE,KAAK,SAASC,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,mBAC9HC,gBAAc,QAAQC,aAAW,sBACnC,yBAAKP,UAAU,2BAA2BQ,GAAG,oBAC3C,wBAAIR,UAAU,mCACZ,wBAAIA,UAAU,mBACZ,uBAAGA,UAAU,WAAWC,KAAK,KAA7B,QAAsC,0BAAMD,UAAU,WAAhB,eAExC,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,WAAWC,KAAK,KAA7B,SAEF,wBAAID,UAAU,qBACZ,uBAAGA,UAAU,2BAA2BC,KAAK,IAAIO,GAAG,aAAaL,cAAY,WAAWM,gBAAc,OAAOH,gBAAc,SAA3H,YACA,yBAAKN,UAAU,gBAAgBU,kBAAgB,cAC7C,uBAAGV,UAAU,gBAAgBC,KAAK,KAAlC,YACA,uBAAGD,UAAU,gBAAgBC,KAAK,KAAlC,eAIN,0BAAMD,UAAU,4BACd,2BAAOA,UAAU,uBAAuBE,KAAK,OAAOS,YAAY,WAChE,4BAAQX,UAAU,uCAAuCE,KAAK,UAA9D,cCKKU,EAvBf,iLAEI,OACE,kBAAC,WAAD,KACE,gCACE,kBAAC,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAM,YAAcC,OAAQ,WACjC,OAAQ,kBAAC,EAAD,SAEV,kBAAC,IAAD,CAAOD,KAAM,cAAgBC,OAAQ,WACnC,OAAQ,kBAAC,EAAD,SAEV,kBAAC,IAAD,CAAOA,OAAQ,WACb,OAAO,kBAAC,EAAD,eAfnB,GAA8BhB,aCKfiB,EAVf,iLAEI,OACE,8CAHN,GAA+BjB,aCUhBkB,EAVf,iLAEI,OACE,2CAHN,GAA4BlB,aCmBbmB,EAhBf,iLAEI,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOJ,KAAM,iBAAkBC,OAAQ,WACrC,OAAO,kBAAC,EAAD,SAGT,kBAAC,IAAD,CAAOA,OAAQ,WACb,OAAO,kBAAC,EAAD,cATjB,GAA6BhB,aCARoB,E,iLAEjB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOL,KAAM,UAAYC,OAAQ,WAC/B,OAAO,kBAAC,EAAD,SAET,kBAAC,IAAD,CAAOD,KAAM,IAAMC,OAAQ,WACzB,OAAO,kBAAC,EAAD,SAET,kBAAC,IAAD,CAAOA,OAAQ,WACb,OAAO,kBAAC,IAAD,CAAUnB,GAAI,e,GAZAG,aCObqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASV,OAAO,kBAAC,EAAD,MAASW,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.21fd643e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Nosotros = () => {\r\n  return (\r\n    <div>\r\n      Nosotros\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nosotros;\r\n","import React from 'react';\r\n\r\nconst Portafolio = () => {\r\n  return (\r\n    <div>\r\n      Portafolio\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Portafolio;\r\n  ","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom';\r\nexport default class Landing extends Component {\r\n  state = {\r\n    nosotros: false\r\n  }\r\n  render() {\r\n\r\n    if (this.state.nosotros) {\r\n      return (<Redirect to={\"/nosotros\"} />)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        Landing\r\n\r\n      <button onClick={() => {\r\n          this.setState({ nosotros: true });\r\n        }}>\r\n          ir a Nosotros\r\n      </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n      <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n      <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\"\r\n        aria-expanded=\"false\" aria-label=\"Toggle navigation\"></button>\r\n      <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\r\n        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"#\">Link</a>\r\n          </li>\r\n          <li className=\"nav-item dropdown\">\r\n            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\r\n              <a className=\"dropdown-item\" href=\"#\">Action 1</a>\r\n              <a className=\"dropdown-item\" href=\"#\">Action 2</a>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <form className=\"form-inline my-2 my-lg-0\">\r\n          <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\r\n          <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Nosotros from './paginas/Nosotros';\r\nimport Portafolio from './paginas/Portafolio';\r\nimport Landing from './paginas/Landing';\r\nimport Navbar from './componentes/Navbar';\r\n\r\nexport class Invitado extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <header>\r\n          <Navbar />\r\n        </header>\r\n        <Switch>\r\n          <Route path={\"/nosotros\"}  render={() => {\r\n            return (<Nosotros />)\r\n          }} />\r\n          <Route path={\"/portafolio\"}  render={() => {\r\n            return (<Portafolio />)\r\n          }} />\r\n          <Route render={() => {\r\n            return <Landing />\r\n          }} />\r\n        </Switch>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Invitado;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        Dashboard\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Perfil extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        Perfil\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Perfil;\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Dashboard from './paginas/Dashboard';\r\nimport Perfil from './paginas/Perfil';\r\n\r\nexport class Logeado extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path={\"/logged/perfil\"} render={() => {\r\n          return <Perfil />\r\n        }} />\r\n\r\n        <Route render={() => {\r\n          return <Dashboard />\r\n        }} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logeado;\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Invitado from './modulos/invitado/Invitado';\r\nimport Logeado from './modulos/logeado/Logeado';\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path={\"/logged\"}  render={() => {\r\n            return <Logeado />\r\n          }} />\r\n          <Route path={\"/\"}  render={() => {\r\n            return <Invitado />\r\n          }} />\r\n          <Route render={() => {\r\n            return <Redirect to={\"/\"} />\r\n          }} />\r\n        </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}